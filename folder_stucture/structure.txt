travel-planner-backend/
│── package.json
│── server.js                  # Entry point
│── .env                       # Environment variables (PORT, DB_URI, JWT_SECRET, etc.)
│── .gitignore
│
├── config/                    # DB & app configs
│   └── db.js                  # MongoDB connection
│
├── routes/                    # All API routes (split by feature)
│   ├── authRoutes.js
│   ├── userRoutes.js
│   ├── locationRoutes.js
│   ├── tripRoutes.js
│   ├── hotelRoutes.js
│   ├── transportRoutes.js
│   ├── bookingRoutes.js       # ✅ (was missing before, needed for user bookings)
│   ├── paymentRoutes.js
│   ├── notificationRoutes.js
│   ├── reviewRoutes.js
│   └── adminRoutes.js
│
├── controllers/               # Business logic for each route
│   ├── authController.js
│   ├── userController.js
│   ├── locationController.js
│   ├── tripController.js
│   ├── hotelController.js
│   ├── transportController.js
│   ├── bookingController.js   # ✅ new
│   ├── paymentController.js
│   ├── notificationController.js
│   ├── reviewController.js
│   └── adminController.js
│
├── models/                    # Mongoose schemas (MongoDB)
│   ├── User.js                # (1️⃣ create first)
│   ├── Location.js            # (2️⃣ create second)
│   ├── Trip.js                # (3️⃣ depends on User + Location)
│   ├── Hotel.js               # (4️⃣ depends on Location)
│   ├── Transport.js           # (5️⃣ depends on Location)
│   ├── Booking.js             # (6️⃣ depends on User, Trip, Hotel, Transport)
│   ├── Payment.js             # (7️⃣ depends on Booking)
│   ├── Notification.js        # (8️⃣ depends on User)
│   └── Review.js              # (9️⃣ depends on User + Trip/Hotel/Transport)
│
├── middlewares/               # Reusable middlewares
│   ├── authMiddleware.js      # Protect routes using JWT
│   └── errorHandler.js        # Global error handling
│
├── utils/                     # Helper functions
│   ├── sendEmail.js           # Email service (Nodemailer)
│   ├── paymentGateway.js      # Stripe/Razorpay wrapper
│   ├── tripOptimizer.js       # Path/itinerary algorithms
│   ├── tokenGenerator.js      # Generate & verify JWT
│   ├── logger.js              # Logging helper
│   └── responseHandler.js     # Consistent API responses
│
├── logs/                      # Store logs (optional)
│   └── app.log
│
└── tests/                     # Unit/integration tests (future)
    ├── auth.test.js
    ├── trip.test.js
    └── payment.test.js




    1 ceasser
    2 affine
    3 playfair 
    4 hill
    5 rainfence 
    6 columan
    7 vigen
    7 sds
    8 des
    9 aes



    git pull origin main
git add .
git commit -m "Added Caesar Cipher backend feature"
git push origin main